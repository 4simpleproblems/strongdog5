var h=Object.defineProperty;var l=(n,e,t)=>e in n?h(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var s=(n,e,t)=>(l(n,typeof e!="symbol"?e+"":e,t),t);import{a as m}from"./ResourceLoader-DSKOvWHX.js";import{ag as g}from"./index-BszMCtG6.js";const a=g();class w{constructor(e){s(this,"priority",m.RENDERING);s(this,"gameWorld");s(this,"onRemove");this.gameWorld=e;const t=this.setSize.bind(this);window.addEventListener("orientationchange",t),window.addEventListener("resize",t);const{off:i}=a.addListener(({general:{resolution:r}})=>{e.threeScene.renderer.setPixelRatio(r)});this.onRemove=()=>{window.removeEventListener("orientationchange",t),window.removeEventListener("resize",t);const r=e.threeScene.renderer;r.clear(),r.dispose(),i()},this.setSize()}setSize(){const e=this.gameWorld.threeScene,t=this.gameWorld.threeScene.renderer.domElement;let i=t.clientWidth/t.clientHeight;const r=e.camera;r.isOrthographicCamera?(r.left=i/-2,r.right=i/2,r.top=1/2,r.bottom=1/-2):r.aspect=i,r.updateProjectionMatrix();const o=Math.min(window.devicePixelRatio,2),{width:d,height:c}=t.getBoundingClientRect();e.renderer.setSize(Math.round(d*o),Math.round(c*o),!1),e.renderer.setPixelRatio(a.settings.general.resolution),this.gameWorld.needsUpdate!==void 0&&(this.gameWorld.needsUpdate=!0)}execute(){if(this.gameWorld.needsUpdate===!1)return;this.gameWorld.needsUpdate&&(this.gameWorld.needsUpdate=!1);const e=this.gameWorld.threeScene,t=e.renderer;t.autoClear===!1&&t.clear(),t.render(e.scene,e.camera),e.sceneWithShadows&&t.render(e.sceneWithShadows,e.camera)}}export{w as L};
